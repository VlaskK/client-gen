// tslint:disable
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Department,
    DepartmentFromJSON,
    DepartmentToJSON,
    Instant,
    InstantFromJSON,
    InstantToJSON,
    LocalDate,
    LocalDateFromJSON,
    LocalDateToJSON,
    Option,
    OptionFromJSON,
    OptionToJSON,
    ResearchProjectState,
    ResearchProjectStateFromJSON,
    ResearchProjectStateToJSON,
} from './index';

/**
 * Исследовательский проект
 * @export
 * @interface ResearchProject
 */
export interface ResearchProject  {
    /**
     * Уникальный идентификатор
     * @type {string}
     * @memberof ResearchProject
     */
    id?: string;
    /**
     * Название
     * @type {string}
     * @memberof ResearchProject
     */
    name?: string;
    /**
     * Идентификатор в системе \"1Форма\"
     * @type {number}
     * @memberof ResearchProject
     */
    externalId?: number;
    /**
     * 
     * @type {Option}
     * @memberof ResearchProject
     */
    client?: Option;
    /**
     * 
     * @type {Department}
     * @memberof ResearchProject
     */
    department?: Department;
    /**
     * Код исследования
     * @type {string}
     * @memberof ResearchProject
     */
    researchCode?: string;
    /**
     * Номер сметы
     * @type {string}
     * @memberof ResearchProject
     */
    researchNumber?: string;
    /**
     * 
     * @type {LocalDate}
     * @memberof ResearchProject
     */
    archivedDate?: LocalDate;
    /**
     * Гриф секретности
     * @type {boolean}
     * @memberof ResearchProject
     */
    secrecy?: boolean;
    /**
     * 
     * @type {LocalDate}
     * @memberof ResearchProject
     */
    secrecyDueDate?: LocalDate;
    /**
     * Этапы проекта
     * @type {Array<ResearchProjectState>}
     * @memberof ResearchProject
     */
    states?: Array<ResearchProjectState>;
    /**
     * 
     * @type {Instant}
     * @memberof ResearchProject
     */
    createdTime?: Instant;
}

export function ResearchProjectFromJSON(json: any): ResearchProject {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'externalId': !exists(json, 'externalId') ? undefined : json['externalId'],
        'client': !exists(json, 'client') ? undefined : OptionFromJSON(json['client']),
        'department': !exists(json, 'department') ? undefined : DepartmentFromJSON(json['department']),
        'researchCode': !exists(json, 'researchCode') ? undefined : json['researchCode'],
        'researchNumber': !exists(json, 'researchNumber') ? undefined : json['researchNumber'],
        'archivedDate': !exists(json, 'archivedDate') ? undefined : LocalDateFromJSON(json['archivedDate']),
        'secrecy': !exists(json, 'secrecy') ? undefined : json['secrecy'],
        'secrecyDueDate': !exists(json, 'secrecyDueDate') ? undefined : LocalDateFromJSON(json['secrecyDueDate']),
        'states': !exists(json, 'states') ? undefined : (json['states'] as Array<any>).map(ResearchProjectStateFromJSON),
        'createdTime': !exists(json, 'createdTime') ? undefined : InstantFromJSON(json['createdTime']),
    };
}

export function ResearchProjectToJSON(value?: ResearchProject): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'name': value.name,
        'externalId': value.externalId,
        'client': OptionToJSON(value.client),
        'department': DepartmentToJSON(value.department),
        'researchCode': value.researchCode,
        'researchNumber': value.researchNumber,
        'archivedDate': LocalDateToJSON(value.archivedDate),
        'secrecy': value.secrecy,
        'secrecyDueDate': LocalDateToJSON(value.secrecyDueDate),
        'states': value.states === undefined ? undefined : (value.states as Array<any>).map(ResearchProjectStateToJSON),
        'createdTime': InstantToJSON(value.createdTime),
    };
}


