// tslint:disable
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SettingVO
 */
export interface SettingVO  {
    /**
     * 
     * @type {string}
     * @memberof SettingVO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SettingVO
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SettingVO
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof SettingVO
     */
    type?: SettingVOTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SettingVO
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof SettingVO
     */
    userId?: string;
}

export function SettingVOFromJSON(json: any): SettingVO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function SettingVOToJSON(value?: SettingVO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'type': value.type,
        'value': value.value,
        'userId': value.userId,
    };
}

/**
* @export
* @enum {string}
*/
export enum SettingVOTypeEnum {
    Int = 'INT',
    Float = 'FLOAT',
    String = 'STRING',
    Date = 'DATE'
}


