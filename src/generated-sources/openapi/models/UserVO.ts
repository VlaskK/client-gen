// tslint:disable
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RoleVO,
    RoleVOFromJSON,
    RoleVOToJSON,
    SettingVO,
    SettingVOFromJSON,
    SettingVOToJSON,
} from './index';

/**
 * 
 * @export
 * @interface UserVO
 */
export interface UserVO  {
    /**
     * 
     * @type {string}
     * @memberof UserVO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVO
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVO
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVO
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVO
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVO
     */
    objectSid?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserVO
     */
    userNonExpired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserVO
     */
    userNonLocked?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserVO
     */
    credentialsNonExpired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserVO
     */
    enabled?: boolean;
    /**
     * 
     * @type {Array<RoleVO>}
     * @memberof UserVO
     */
    roles?: Array<RoleVO>;
    /**
     * 
     * @type {Array<SettingVO>}
     * @memberof UserVO
     */
    settings?: Array<SettingVO>;
    /**
     * 
     * @type {string}
     * @memberof UserVO
     */
    departmentId?: string;
    /**
     * 
     * @type {Date}
     * @memberof UserVO
     */
    createdTime?: Date;
}

export function UserVOFromJSON(json: any): UserVO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'objectSid': !exists(json, 'objectSid') ? undefined : json['objectSid'],
        'userNonExpired': !exists(json, 'userNonExpired') ? undefined : json['userNonExpired'],
        'userNonLocked': !exists(json, 'userNonLocked') ? undefined : json['userNonLocked'],
        'credentialsNonExpired': !exists(json, 'credentialsNonExpired') ? undefined : json['credentialsNonExpired'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'roles': !exists(json, 'roles') ? undefined : (json['roles'] as Array<any>).map(RoleVOFromJSON),
        'settings': !exists(json, 'settings') ? undefined : (json['settings'] as Array<any>).map(SettingVOFromJSON),
        'departmentId': !exists(json, 'departmentId') ? undefined : json['departmentId'],
        'createdTime': !exists(json, 'createdTime') ? undefined : new Date(json['createdTime']),
    };
}

export function UserVOToJSON(value?: UserVO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'email': value.email,
        'userName': value.userName,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'objectSid': value.objectSid,
        'userNonExpired': value.userNonExpired,
        'userNonLocked': value.userNonLocked,
        'credentialsNonExpired': value.credentialsNonExpired,
        'enabled': value.enabled,
        'roles': value.roles === undefined ? undefined : (value.roles as Array<any>).map(RoleVOToJSON),
        'settings': value.settings === undefined ? undefined : (value.settings as Array<any>).map(SettingVOToJSON),
        'departmentId': value.departmentId,
        'createdTime': value.createdTime === undefined ? undefined : value.createdTime.toISOString(),
    };
}


