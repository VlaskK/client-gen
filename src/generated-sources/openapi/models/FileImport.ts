// tslint:disable
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Department,
    DepartmentFromJSON,
    DepartmentToJSON,
    Instant,
    InstantFromJSON,
    InstantToJSON,
    ResearchProject,
    ResearchProjectFromJSON,
    ResearchProjectToJSON,
    ResearchProjectState,
    ResearchProjectStateFromJSON,
    ResearchProjectStateToJSON,
} from './index';

/**
 * Информация об импорте файла
 * @export
 * @interface FileImport
 */
export interface FileImport  {
    /**
     * Уникальный идентификатор
     * @type {string}
     * @memberof FileImport
     */
    id?: string;
    /**
     * 
     * @type {Department}
     * @memberof FileImport
     */
    department?: Department;
    /**
     * Название файла
     * @type {string}
     * @memberof FileImport
     */
    fileName?: string;
    /**
     * Ссылка на файл
     * @type {string}
     * @memberof FileImport
     */
    fileLink?: string;
    /**
     * Расширение файла
     * @type {string}
     * @memberof FileImport
     */
    extension?: string;
    /**
     * Размер файла в байтах
     * @type {number}
     * @memberof FileImport
     */
    size?: number;
    /**
     * Путь к файлу
     * @type {string}
     * @memberof FileImport
     */
    filePath?: string;
    /**
     * Хэш файла
     * @type {string}
     * @memberof FileImport
     */
    fileHash?: string;
    /**
     * Тип файла
     * @type {string}
     * @memberof FileImport
     */
    fileType?: FileImportFileTypeEnum;
    /**
     * Содержимое документа
     * @type {string}
     * @memberof FileImport
     */
    content?: string;
    /**
     * 
     * @type {ResearchProject}
     * @memberof FileImport
     */
    researchProject?: ResearchProject;
    /**
     * 
     * @type {ResearchProjectState}
     * @memberof FileImport
     */
    researchProjectState?: ResearchProjectState;
    /**
     * 
     * @type {Instant}
     * @memberof FileImport
     */
    createdTime?: Instant;
}

export function FileImportFromJSON(json: any): FileImport {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'department': !exists(json, 'department') ? undefined : DepartmentFromJSON(json['department']),
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'fileLink': !exists(json, 'fileLink') ? undefined : json['fileLink'],
        'extension': !exists(json, 'extension') ? undefined : json['extension'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'filePath': !exists(json, 'filePath') ? undefined : json['filePath'],
        'fileHash': !exists(json, 'fileHash') ? undefined : json['fileHash'],
        'fileType': !exists(json, 'fileType') ? undefined : json['fileType'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'researchProject': !exists(json, 'researchProject') ? undefined : ResearchProjectFromJSON(json['researchProject']),
        'researchProjectState': !exists(json, 'researchProjectState') ? undefined : ResearchProjectStateFromJSON(json['researchProjectState']),
        'createdTime': !exists(json, 'createdTime') ? undefined : InstantFromJSON(json['createdTime']),
    };
}

export function FileImportToJSON(value?: FileImport): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'department': DepartmentToJSON(value.department),
        'fileName': value.fileName,
        'fileLink': value.fileLink,
        'extension': value.extension,
        'size': value.size,
        'filePath': value.filePath,
        'fileHash': value.fileHash,
        'fileType': value.fileType,
        'content': value.content,
        'researchProject': ResearchProjectToJSON(value.researchProject),
        'researchProjectState': ResearchProjectStateToJSON(value.researchProjectState),
        'createdTime': InstantToJSON(value.createdTime),
    };
}

/**
* @export
* @enum {string}
*/
export enum FileImportFileTypeEnum {
    Word = 'WORD',
    PowerPoint = 'POWER_POINT',
    Excel = 'EXCEL',
    Pdf = 'PDF',
    Other = 'OTHER'
}


